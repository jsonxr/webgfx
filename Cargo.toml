# You must change these to your own details.
[package]
name = "webgfx-rs"
description = "Graphics engine for the web"
version = "0.0.1"
authors = ["Jason Rowland <jason@snowcapstudios.com>"]
categories = ["wasm"]
license = "LICENSE"
repository = "git@github.com:jsonxr/webgfx.git"
readme = "README.md"
edition = "2018"

[lib]
path = "src/rust/lib.rs"
crate-type = ["cdylib", "rlib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true
opt-level = 'z'

[features]
# If you uncomment this line, it will enable `wee_alloc`:
default = ["wee_alloc"]

[dependencies]
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = "0.2"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
wee_alloc = { version = "0.4", optional = true }

js-sys = "0.3"

# Used for serializing things from js to rust with wasm_bindgen
#serde = { version = "1.0", features = ["derive"] }

#serde-wasm-bindgen = "0.1.3"

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3"
features = [
  'Document',
  'Element',
  'HtmlCanvasElement',
  'WebGlBuffer',
  'WebGlRenderingContext',
  'WebGlProgram',
  'WebGlShader',
  'Window',
  'console',
]
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1"

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.2"
futures = "0.1"
js-sys = "0.3"
wasm-bindgen-futures = "0.3"
